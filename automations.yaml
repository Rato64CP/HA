- id: '1749500392766'
  alias: HLAĐENJE CRKVE - Gašenje nakon mise
  description: ''
  triggers:
  - minutes: /1
    trigger: time_pattern
  conditions:
  - condition: state
    entity_id: input_boolean.koristiti_klima_uredaje
    state: 'on'
  - condition: state
    entity_id: input_boolean.rucno_hladenje
    state: 'off'
  - condition: template
    value_template: "{% set sada = now().time() %} {% set aktivacija = false %} {%
      set vrsta_mise = states('input_select.vrsta_dnevne_mise') %}\n{% if now().weekday()
      == 6 %}\n  {# Nedjelja #}\n  {% set jutro_str = states('input_select.vrijeme_nedjeljne_jutarnje_mise')
      %}\n  {% set vecer_str = states('input_select.vrijeme_nedjeljne_vecernje_mise')
      %}\n\n  {% if jutro_str != 'Nema mise' and ':' in jutro_str %}\n    {% set misa_jutro
      = strptime(jutro_str, '%H:%M') %}\n    {% set offset_jutro = states('input_number.gasenje_klime_nedjelja_jutro')
      | int %}\n    {% set kraj_jutro = (misa_jutro + timedelta(minutes=offset_jutro)).time()
      %}\n    {% if sada.strftime('%H:%M') == kraj_jutro.strftime('%H:%M') %}\n      {%
      set aktivacija = true %}\n    {% endif %}\n  {% endif %}\n\n  {% if vecer_str
      != 'Nema mise' and ':' in vecer_str %}\n    {% set misa_vecer = strptime(vecer_str,
      '%H:%M') %}\n    {% set offset_vecer = states('input_number.gasenje_klime_druge_mise')
      | int %}\n    {% set kraj_vecer = (misa_vecer + timedelta(minutes=offset_vecer)).time()
      %}\n    {% if sada.strftime('%H:%M') == kraj_vecer.strftime('%H:%M') %}\n      {%
      set aktivacija = true %}\n    {% endif %}\n  {% endif %}\n\n{% else %}\n  {#
      Ostali dani #}\n  {% set misa_str = states('input_select.vrijeme_dnevne_mise')
      %}\n  {% if misa_str and ':' in misa_str %}\n    {% set misa = strptime(misa_str,
      '%H:%M') %}\n    {% if vrsta_mise == 'Svetkovina' %}\n      {% set offset =
      states('input_number.gasenje_klime_nedjelja_jutro') | int %}\n    {% else %}\n
      \     {% set offset = states('input_number.gasenje_klime_druge_mise') | int
      %}\n    {% endif %}\n    {% set kraj = (misa + timedelta(minutes=offset)).time()
      %}\n    {% if sada.strftime('%H:%M') == kraj.strftime('%H:%M') %}\n      {%
      set aktivacija = true %}\n    {% endif %}\n  {% endif %}\n{% endif %}\n{{ aktivacija
      }}"
  actions:
  - data:
      message: Gašenje svih klima nakon mise u {{ now() }}
      level: info
    action: system_log.write
  - target:
      entity_id:
      - climate.9424b8b8c89e
      - climate.9424b8b8c8a4
      - climate.9424b8b8c92a
      - climate.9424b8b87ea5
      - climate.9424b8698184
      - climate.c039370a331f
    action: climate.turn_off
- id: '1749627144225'
  alias: RAZGLAS - uključenje prije mise (s helperom)
  description: Vrijeme prije mise prema input_number.razglas_prije_mise, s automatskim
    +15 min za određene slučajeve
  triggers:
  - trigger: time_pattern
    minutes: /5
  conditions:
  - condition: state
    entity_id: input_boolean.automatika_razglasa
    state: 'on'
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ je_radni_dan and prozor_radni }}'
      - condition: template
        value_template: '{{ zvonilo_ok }}'
    - condition: template
      value_template: '{{ prozor_ned_jutro }}'
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ prozor_ned_vecer }}'
      - condition: template
        value_template: '{{ zvonilo_ok }}'
  actions:
  - action: switch.turn_on
    target:
      entity_id: switch.sonoff_10010e7b86
  variables:
    sada: '{{ now() }}'
    je_nedjelja: '{{ now().weekday() == 6 }}'
    je_radni_dan: '{{ now().weekday() in [0,1,2,3,4,5] }}'
    base_offset: '{{ states(''input_number.razglas_prije_mise'')|int }}'
    vrsta_mise: '{{ states(''input_select.vrsta_dnevne_mise'') }}'
    misa_radni_str: '{{ states(''input_select.vrijeme_dnevne_mise'') }}'
    misa_ned_jutro_str: '{{ states(''input_select.vrijeme_nedjeljne_jutarnje_mise'')
      }}'
    misa_ned_vecer_str: '{{ states(''input_select.vrijeme_nedjeljne_vecernje_mise'')
      }}'
    minuta_prije_radni: '{{ base_offset + (15 if now().month in [5,10] else 0) }}'
    minuta_prije_ned_jutro: '{{ base_offset + 15 }}'
    minuta_prije_ned_vecer: '{{ base_offset + (15 if now().month in [5,10] else 0)
      }}'
    prozor_radni: "{% set s = misa_radni_str %} {% if not s or ':' not in s or vrsta_mise
      not in ['Obična dnevna misa','Blagdan','Svetkovina'] %}\n  false\n{% else %}\n
      \ {% set hm = strptime(s, '%H:%M') %}\n  {% set misa_dt = now().replace(hour=hm.hour,
      minute=hm.minute, second=0, microsecond=0) %}\n  {% set start = misa_dt - timedelta(minutes=minuta_prije_radni|int)
      %}\n  {% set end = start + timedelta(minutes=5) %}\n  {{ start.time() <= now().time()
      <= end.time() }}\n{% endif %}\n"
    prozor_ned_jutro: "{% set s = misa_ned_jutro_str %} {% if not je_nedjelja or not
      s or s == 'Nema mise' or ':' not in s %}\n  false\n{% else %}\n  {% set hm =
      strptime(s, '%H:%M') %}\n  {% set misa_dt = now().replace(hour=hm.hour, minute=hm.minute,
      second=0, microsecond=0) %}\n  {% set start = misa_dt - timedelta(minutes=minuta_prije_ned_jutro|int)
      %}\n  {% set end = start + timedelta(minutes=5) %}\n  {{ start.time() <= now().time()
      <= end.time() }}\n{% endif %}\n"
    prozor_ned_vecer: "{% set s = misa_ned_vecer_str %} {% if not je_nedjelja or not
      s or s == 'Nema mise' or ':' not in s %}\n  false\n{% else %}\n  {% set hm =
      strptime(s, '%H:%M') %}\n  {% set misa_dt = now().replace(hour=hm.hour, minute=hm.minute,
      second=0, microsecond=0) %}\n  {% set start = misa_dt - timedelta(minutes=minuta_prije_ned_vecer|int)
      %}\n  {% set end = start + timedelta(minutes=5) %}\n  {{ start.time() <= now().time()
      <= end.time() }}\n{% endif %}\n"
    zvonilo_ok: "{% set ib = states.input_boolean.dnevna_misa_vec_zvonilo %} {% if
      ib.state == 'off' %}\n  true\n{% else %}\n  {{ (now() - ib.last_changed).total_seconds()
      <= 7200 }}\n{% endif %}\n"
  mode: single
- id: '1749627338488'
  alias: RAZGLAS - gašenje 21:20 (izuzeci) + auto 03:00
  description: Gasi u 21:20 osim izuzetaka; ako je izuzetak, ugasi u 03:00. Radi samo
    kad je automatika uključena.
  triggers:
  - id: t2120
    trigger: time
    at: '21:20:00'
  - id: t0300
    trigger: time
    at: 03:00:00
  conditions:
  - condition: state
    entity_id: input_boolean.automatika_razglasa
    state: 'on'
  actions:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''t2120'' }}'
      - condition: template
        value_template: '{{ not (late_mass_today or badnjak_today or uskrs_sutra_today)
          }}'
      sequence:
      - target:
          entity_id: switch.sonoff_10010e7b86
        action: switch.turn_off
      - data:
          level: info
          message: '[RAZGLAS OFF 21:20] late_mass_today={{ late_mass_today }}, badnjak={{
            badnjak_today }}, uskrs_sutra={{ uskrs_sutra_today }}'
        action: system_log.write
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''t0300'' }}'
      - condition: template
        value_template: '{{ late_mass_yest or badnjak_yest or uskrs_danas }}'
      sequence:
      - target:
          entity_id: switch.sonoff_10010e7b86
        action: switch.turn_off
      - data:
          level: info
          message: '[RAZGLAS OFF 03:00] late_mass_yest={{ late_mass_yest }}, badnjak_yest={{
            badnjak_yest }}, uskrs_danas={{ uskrs_danas }}'
        action: system_log.write
  variables:
    je_nedjelja_today: '{{ now().weekday() == 6 }}'
    vrsta_today: '{{ states(''input_select.vrsta_dnevne_mise'') }}'
    s_radni_today: '{{ states(''input_select.vrijeme_dnevne_mise'') }}'
    s_ned_vecer_today: '{{ states(''input_select.vrijeme_nedjeljne_vecernje_mise'')
      }}'
    after20: '{{ strptime(''20:00'',''%H:%M'').time() }}'
    late_mass_today: "{% if je_nedjelja_today %}\n  {% set s = s_ned_vecer_today %}\n
      \ {% if s and s != 'Nema mise' and ':' in s %}\n    {{ (strptime(s,'%H:%M').time()
      >= after20) | bool }}\n  {% else %} false {% endif %}\n{% else %}\n  {% set
      s = s_radni_today %}\n  {% if s and ':' in s and vrsta_today in ['Obična dnevna
      misa','Blagdan','Svetkovina'] %}\n    {{ (strptime(s,'%H:%M').time() >= after20)
      | bool }}\n  {% else %} false {% endif %}\n{% endif %}\n"
    badnjak_today: '{{ now().month == 12 and now().day == 24 }}'
    uskrs_sutra_today: "{% set easter = state_attr('calendar.uskrs','start_time')
      %} {% if easter %}\n  {{ (as_datetime(easter).date() - now().date()).days ==
      1 }}\n{% else %} false {% endif %}\n"
    y: '{{ now() - timedelta(days=1) }}'
    je_nedjelja_yest: '{{ (now() - timedelta(days=1)).weekday() == 6 }}'
    badnjak_yest: '{{ y.month == 12 and y.day == 24 }}'
    uskrs_danas: "{% set easter = state_attr('calendar.uskrs','start_time') %} {%
      if easter %}\n  {{ as_datetime(easter).date() == now().date() }}\n{% else %}
      false {% endif %}\n"
    s_radni_any: '{{ states(''input_select.vrijeme_dnevne_mise'') }}'
    s_ned_vecer_any: '{{ states(''input_select.vrijeme_nedjeljne_vecernje_mise'')
      }}'
    late_mass_yest: "{% if je_nedjelja_yest %}\n  {% set s = s_ned_vecer_any %}\n
      \ {% if s and s != 'Nema mise' and ':' in s %}\n    {{ (strptime(s,'%H:%M').time()
      >= after20) | bool }}\n  {% else %} false {% endif %}\n{% else %}\n  {% set
      s = s_radni_any %}\n  {% if s and ':' in s %}\n    {{ (strptime(s,'%H:%M').time()
      >= after20) | bool }}\n  {% else %} false {% endif %}\n{% endif %}\n"
  mode: single
- id: '1749631524485'
  alias: ZDRAVOMARIJA – večernje zvono (AT helper)
  description: Pali zvono u točno vrijeme izračunano u helperu.
  triggers:
  - trigger: time
    at: input_datetime.zdravomarija_vecer_vrijeme
  conditions:
  - condition: state
    entity_id: input_boolean.automatika_zdravomarije_navecer
    state: 'on'
  - condition: time
    after: '16:00:00'
    before: '21:30:00'
  actions:
  - action: light.turn_on
    target:
      entity_id: light.reflektori
  - action: switch.turn_on
    target:
      entity_id: "{% if is_state('input_select.vrsta_zvona_zdravomarija_navecer',
        'MUŠKO') %}\n  switch.sonoff_100132ebac_1\n{% else %}\n  switch.sonoff_100132ebac_2\n{%
        endif %}\n"
  - delay:
      minutes: '{{ states(''input_number.zdravomarija_uvecer_duljina'') | int }}'
  - action: switch.turn_off
    target:
      entity_id: "{% if is_state('input_select.vrsta_zvona_zdravomarija_navecer',
        'MUŠKO') %}\n  switch.sonoff_100132ebac_1\n{% else %}\n  switch.sonoff_100132ebac_2\n{%
        endif %}\n"
  mode: single
- id: '1749632306378'
  alias: SLAVLJENJE - nakon zdravomarije (20.-28. lipnja)
  triggers:
  - seconds: /30
    trigger: time_pattern
  conditions:
  - condition: state
    entity_id: input_boolean.automatika_zdravomarije_navecer
    state: 'on'
  - condition: state
    entity_id: input_boolean.slavljenje_aktivirano
    state: 'off'
  - condition: template
    value_template: '{{ now().month == 6 and now().day >= 20 and now().day <= 28 }}

      '
  - condition: template
    value_template: '{% set misa_str = states(''input_select.vrijeme_dnevne_mise'')
      %} {% set misa = strptime(misa_str, ''%H:%M'') %} {% set zalaz10_str = states(''sensor.zalaz10'')
      %} {% set zalaz10 = strptime(zalaz10_str, ''%H:%M'') %} {% set diff = ((zalaz10
      | as_datetime) - (misa | as_datetime)).total_seconds() / 60 %} {% set zdravo
      = zalaz10 if diff >= 40 else misa + timedelta(minutes=40) %} {% set slavljenje
      = (zdravo | as_datetime + timedelta(minutes=4)).time() %} {{ now().strftime(''%H:%M'')
      == slavljenje.strftime(''%H:%M'') }}

      '
  actions:
  - target:
      entity_id: switch.sonoff_100132ebac_3
    action: switch.turn_on
  - target:
      entity_id: input_boolean.slavljenje_aktivirano
    action: input_boolean.turn_on
  - delay: 00:02:00
  - target:
      entity_id: switch.sonoff_100132ebac_3
    action: switch.turn_off
  mode: single
- id: '1749756903717'
  alias: Reset oznake "dnevna misa već zvonilo"
  triggers:
  - at: 00:00:01
    trigger: time
  actions:
  - target:
      entity_id: input_boolean.dnevna_misa_vec_zvonilo
    action: input_boolean.turn_off
  mode: single
- id: '1749759613282'
  alias: Zvona – dnevne mise (Obična/Blagdan/Svetkovina – ujedinjeno)
  description: 'Obična: −30 min; Blagdan: −30 min; Svetkovina: −2 h i −1 h (s pred-odgodom
    zbog kucanja sata)'
  triggers:
  - id: obicna_minus_30m
    trigger: template
    for: 00:00:05
    value_template: "{% set vr = states('input_select.vrsta_dnevne_mise') %} {% set
      s = states('input_select.vrijeme_dnevne_mise') %} {% set after = strptime('05:00','%H:%M').time()
      %} {% set before = strptime('22:00','%H:%M').time() %} {% if now().weekday()
      != 6 and vr == 'Obična dnevna misa' and s and s != 'Nema mise' and ':' in s
      %}\n  {% set hm = strptime(s,'%H:%M') %}\n  {% set t = (now().replace(hour=hm.hour,
      minute=hm.minute, second=0, microsecond=0)\n             - timedelta(minutes=30)).strftime('%H:%M')
      %}\n  {{ now().strftime('%H:%M') == t and after <= now().time() <= before }}\n{%
      else %} false {% endif %}\n"
  - id: blagdan_minus_30m
    trigger: template
    for: 00:00:05
    value_template: "{% set vr = states('input_select.vrsta_dnevne_mise') %} {% set
      s = states('input_select.vrijeme_dnevne_mise') %} {% set after = strptime('05:00','%H:%M').time()
      %} {% set before = strptime('22:00','%H:%M').time() %} {% if now().weekday()
      != 6 and vr == 'Blagdan' and s and s != 'Nema mise' and ':' in s %}\n  {% set
      hm = strptime(s,'%H:%M') %}\n  {% set t = (now().replace(hour=hm.hour, minute=hm.minute,
      second=0, microsecond=0)\n             - timedelta(minutes=30)).strftime('%H:%M')
      %}\n  {{ now().strftime('%H:%M') == t and after <= now().time() <= before }}\n{%
      else %} false {% endif %}\n"
  - id: svetkovina_minus_2h
    trigger: template
    for: 00:00:05
    value_template: "{% set vr = states('input_select.vrsta_dnevne_mise') %} {% set
      s = states('input_select.vrijeme_dnevne_mise') %} {% if now().weekday() != 6
      and vr == 'Svetkovina' and s and s != 'Nema mise' and ':' in s %}\n  {% set
      hm = strptime(s,'%H:%M') %}\n  {% set t = (now().replace(hour=hm.hour, minute=hm.minute,
      second=0, microsecond=0)\n             - timedelta(hours=2)).strftime('%H:%M')
      %}\n  {{ now().strftime('%H:%M') == t }}\n{% else %} false {% endif %}\n"
  - id: svetkovina_minus_1h
    trigger: template
    for: 00:00:05
    value_template: "{% set vr = states('input_select.vrsta_dnevne_mise') %} {% set
      s = states('input_select.vrijeme_dnevne_mise') %} {% if now().weekday() != 6
      and vr == 'Svetkovina' and s and s != 'Nema mise' and ':' in s %}\n  {% set
      hm = strptime(s,'%H:%M') %}\n  {% set t = (now().replace(hour=hm.hour, minute=hm.minute,
      second=0, microsecond=0)\n             - timedelta(hours=1)).strftime('%H:%M')
      %}\n  {{ now().strftime('%H:%M') == t }}\n{% else %} false {% endif %}\n"
  conditions:
  - condition: state
    entity_id: input_boolean.auto_zvona_za_misu
    state: 'on'
  - condition: state
    entity_id: input_boolean.dnevna_misa_vec_zvonilo
    state: 'off'
  actions:
  - variables:
      vrsta_current: '{% if trigger.id == ''blagdan_minus_30m'' %} Blagdan {% elif
        trigger.id in [''svetkovina_minus_2h'',''svetkovina_minus_1h''] %} Svetkovina
        {% else %} Obična dnevna misa {% endif %}

        '
      pre_delay: "{% set s = states('input_select.vrijeme_dnevne_mise') %} {% if s
        and ':' in s %}\n  {% set hm = strptime(s,'%H:%M') %}\n  {% set base = now().replace(hour=hm.hour,
        minute=hm.minute, second=0, microsecond=0) %}\n  {% if trigger.id in ['obicna_minus_30m','blagdan_minus_30m']
        %}\n    {% set td = base - timedelta(minutes=30) %}\n  {% elif trigger.id
        == 'svetkovina_minus_2h' %}\n    {% set td = base - timedelta(hours=2) %}\n
        \ {% elif trigger.id == 'svetkovina_minus_1h' %}\n    {% set td = base - timedelta(hours=1)
        %}\n  {% else %}\n    {% set td = now() %}\n  {% endif %}\n  {% set mm = td.minute
        %}\n  {{ 30 if mm == 0 else 5 }}\n{% else %}\n  5\n{% endif %}\n"
      tip_zvona: "{% if vrsta_current == 'Obična dnevna misa' %}\n  {{ states('input_select.vrsta_zvona_obicna_dnevna_misa')
        }}\n{% elif vrsta_current == 'Blagdan' %}\n  {{ states('input_select.vrsta_zvona_blagdan')
        }}\n{% else %}\n  {{ states('input_select.vrsta_zvona_svetkovina') }}\n{%
        endif %}\n"
      trajanje_min: "{% if vrsta_current == 'Obična dnevna misa' %}\n  {{ states('input_number.zvona_obicna_dnevna_duljina')|float
        }}\n{% elif vrsta_current == 'Blagdan' %}\n  {{ states('input_number.zvona_blagdan_duljina')|float
        }}\n{% else %}\n  {{ states('input_number.zvona_svetkovina_duljina')|float
        }}\n{% endif %}\n"
      trajanje_musko: "{% if trajanje_min == 0.5 %}\n  15\n{% else %}\n  {{ (trajanje_min*60
        - 30)|int }}\n{% endif %}\n"
      trajanje_zensko: '{{ (trajanje_min*60)|int }}'
  - delay:
      seconds: '{{ pre_delay }}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ tip_zvona == ''MUŠKO'' }}'
      sequence:
      - action: switch.turn_on
        target:
          entity_id: switch.sonoff_100132ebac_1
      - delay:
          seconds: '{{ trajanje_musko }}'
      - action: switch.turn_off
        target:
          entity_id: switch.sonoff_100132ebac_1
    - conditions:
      - condition: template
        value_template: '{{ tip_zvona == ''ŽENSKO'' }}'
      sequence:
      - action: switch.turn_on
        target:
          entity_id: switch.sonoff_100132ebac_2
      - delay:
          seconds: '{{ trajanje_zensko }}'
      - action: switch.turn_off
        target:
          entity_id: switch.sonoff_100132ebac_2
    - conditions:
      - condition: template
        value_template: '{{ tip_zvona == ''OBA'' }}'
      sequence:
      - action: switch.turn_on
        target:
          entity_id:
          - switch.sonoff_100132ebac_1
          - switch.sonoff_100132ebac_2
      - delay:
          seconds: '{{ trajanje_musko }}'
      - action: switch.turn_off
        target:
          entity_id: switch.sonoff_100132ebac_1
      - delay:
          seconds: '{{ trajanje_zensko - trajanje_musko }}'
      - action: switch.turn_off
        target:
          entity_id: switch.sonoff_100132ebac_2
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.id in [''obicna_minus_30m'',''blagdan_minus_30m'',''svetkovina_minus_1h'']
          }}'
      sequence:
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.dnevna_misa_vec_zvonilo
    - conditions:
      - condition: template
        value_template: '{{ trigger.id in [''blagdan_minus_30m'',''svetkovina_minus_1h'']
          }}'
      sequence:
      - action: input_select.select_option
        target:
          entity_id: input_select.vrsta_dnevne_mise
        data:
          option: Obična dnevna misa
  mode: single
- id: '1749765474784'
  alias: Vanjska + Božićna rasvjeta – pametno ON/OFF (sezonski + oblačnost)
  description: 'Vanjska rasvjeta: uključi kad potamni (ranije ako je oblačno), ugasi
    ujutro (kasnije ako je oblačno). Božićna rasvjeta: pali dodatno u sezoni (od subote
    uoči 1. nedjelje došašća do nedjelje poslije 6. siječnja).

    '
  triggers:
  - id: turn_on
    trigger: template
    for: 00:01:00
    value_template: "{% set w_state = states('weather.forecast_home_2') %} {% set
      fc = state_attr('weather.forecast_home_2','forecast') %} {% set weather_ok =
      (w_state not in ['unknown','unavailable']) and (fc is not none) %} {% if weather_ok
      and fc and fc[0] is defined and fc[0].cloud_coverage is defined %}\n  {% set
      clouds = fc[0].cloud_coverage|int %}\n{% else %}\n  {% set map = {\n    'clear-night':
      0, 'sunny': 10, 'partlycloudy': 60, 'cloudy': 90,\n    'windy': 40, 'windy-variant':
      60, 'fog': 80, 'lightning': 70,\n    'lightning-rainy': 80, 'rainy': 90, 'pouring':
      95, 'snowy': 90,\n    'hail': 90, 'snowy-rainy': 95\n  } %}\n  {% set clouds
      = map.get(w_state, 50) %}\n{% endif %} {% set elev = state_attr('sun.sun','elevation')|float(90)
      %} {# baza −4.5°, s više oblaka pali ranije do oko −2.0° #} {% set threshold_on
      = -4.5 + (clouds/100)*2.5 %} {% set popodne = now().hour >= 12 %} {{ popodne
      and elev <= threshold_on }}\n"
  - id: turn_off
    trigger: template
    for: 00:01:00
    value_template: "{% set w_state = states('weather.forecast_home_2') %} {% set
      fc = state_attr('weather.forecast_home_2','forecast') %} {% set weather_ok =
      (w_state not in ['unknown','unavailable']) and (fc is not none) %} {% if weather_ok
      and fc and fc[0] is defined and fc[0].cloud_coverage is defined %}\n  {% set
      clouds = fc[0].cloud_coverage|int %}\n{% else %}\n  {% set map = {\n    'clear-night':
      0, 'sunny': 10, 'partlycloudy': 60, 'cloudy': 90,\n    'windy': 40, 'windy-variant':
      60, 'fog': 80, 'lightning': 70,\n    'lightning-rainy': 80, 'rainy': 90, 'pouring':
      95, 'snowy': 90,\n    'hail': 90, 'snowy-rainy': 95\n  } %}\n  {% set clouds
      = map.get(w_state, 50) %}\n{% endif %} {% set elev = state_attr('sun.sun','elevation')|float(-90)
      %} {# baza −6.0° (civilna zora), s više oblaka gasi mrvu kasnije do oko −4.0°
      #} {% set threshold_off = -6.0 + (clouds/100)*2.0 %} {% set jutro = now().hour
      <= 12 %} {{ jutro and elev >= threshold_off }}\n"
  conditions:
  - condition: state
    entity_id: input_boolean.automat_vanjska_rasvjeta
    state: 'on'
  actions:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''turn_on'' }}'
      sequence:
      - if:
        - condition: template
          value_template: '{{ not any_on_for_on | bool }}'
        then:
        - action: switch.turn_on
          target:
            entity_id: switch.mrtvacnica2
        - action: light.turn_on
          target:
            entity_id:
            - light.kandelaberi
            - light.lampevani
        - action: system_log.write
          data:
            level: info
            message: '[Rasvjeta] → ON (vanjska, template trigger)'
      - if:
        - condition: template
          value_template: '{{ season_active and is_state(''light.bozicna_rasvjeta'',''off'')
            }}'
        then:
        - action: light.turn_on
          target:
            entity_id: light.bozicna_rasvjeta
        - action: system_log.write
          data:
            level: info
            message: '[Božićna rasvjeta] → ON (sezona aktivna)'
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''turn_off'' }}'
      sequence:
      - if:
        - condition: state
          entity_id: light.bozicna_rasvjeta
          state: 'on'
        then:
        - action: light.turn_off
          target:
            entity_id: light.bozicna_rasvjeta
        - action: system_log.write
          data:
            level: info
            message: '[Božićna rasvjeta] → OFF (template trigger)'
      - if:
        - condition: template
          value_template: '{{ any_on_for_off | bool }}'
        then:
        - action: light.turn_off
          target:
            entity_id:
            - light.kandelaberi
            - light.lampevani
            - light.reflektori
        - action: switch.turn_off
          target:
            entity_id: switch.mrtvacnica2
        - action: system_log.write
          data:
            level: info
            message: '[Rasvjeta] → OFF (vanjska, template trigger)'
  variables:
    any_on_for_on: "{{ is_state('switch.mrtvacnica2','on')\n   or is_state('light.kandelaberi','on')\n
      \  or is_state('light.lampevani','on') }}"
    any_on_for_off: "{{ is_state('switch.mrtvacnica2','on')\n   or is_state('light.kandelaberi','on')\n
      \  or is_state('light.lampevani','on')\n   or is_state('light.reflektori','on')
      }}"
    season_active: '{% set n = now() %} {% set end_year = n.year if n.month == 1 else
      n.year + 1 %} {% set jan6 = strptime(end_year|string ~ ''-01-06'', ''%Y-%m-%d'')
      %} {% set d = (6 - jan6.weekday()) % 7 %} {% set d = 7 if d == 0 else d %} {%
      set end_ts = as_timestamp(jan6) + d*86400 + 86399 %} {% set start_year = end_year
      - 1 %} {% set nov27 = strptime(start_year|string ~ ''-11-27'', ''%Y-%m-%d'')
      %} {% set d2 = (6 - nov27.weekday()) % 7 %} {% set advent1_ts = as_timestamp(nov27)
      + d2*86400 %} {% set start_ts = advent1_ts - 86400 %} {% set now_ts = as_timestamp(n)
      %} {{ start_ts <= now_ts <= end_ts }}

      '
  mode: single
- id: '1749765569496'
  alias: INFO – izračun termina Zdravomarije navečer (dnevno)
  description: Računa točno vrijeme večernje Zdravomarije i upisuje u input_datetime.
  triggers:
  - trigger: time
    at: '15:05:00'
  conditions: []
  actions:
  - variables:
      misa_str: '{{ states(''input_select.vrijeme_dnevne_mise'') }}'
      misa_ts: "{% if misa_str == 'Nema mise' %}\n  {{ as_timestamp(today_at('06:00:00'))
        }}\n{% else %}\n  {% set hh = misa_str.split(':')[0] | int %}\n  {% set mm
        = misa_str.split(':')[1] | int %}\n  {{ as_timestamp(today_at((hh|string).zfill(2)
        ~ ':' ~ (mm|string).zfill(2) ~ ':00')) }}\n{% endif %}\n"
      misa_jutarnja: '{% if misa_str == ''Nema mise'' %} true {% else %} {{ (misa_str.split('':'')[0]
        | int) < 12 }} {% endif %}

        '
      sunset_attr: '{{ state_attr(''sun.sun'',''next_setting'') }}'
      dusk_attr: '{{ state_attr(''sun.sun'',''next_dusk'') }}'
      sunset_ts: '{% if sunset_attr %} {{ as_timestamp(as_local(as_datetime(sunset_attr)))
        }} {% else %} {{ as_timestamp(now()) }} {% endif %}

        '
      dusk_ts: '{% if dusk_attr %} {{ as_timestamp(as_local(as_datetime(dusk_attr)))
        }} {% else %} {{ as_timestamp(now() + timedelta(minutes=20)) }} {% endif %}

        '
      w_state: '{{ states(''weather.forecast_home_2'') }}'
      fc: '{{ state_attr(''weather.forecast_home_2'',''forecast'') }}'
      weather_ok: '{{ (w_state not in [''unknown'',''unavailable'']) and (fc is not
        none) }}'
      clouds: "{% if weather_ok and fc and fc[0] is defined and fc[0].cloud_coverage
        is defined %}\n  {{ fc[0].cloud_coverage|int }}\n{% else %}\n  {% set map
        = {\n    'clear-night': 0, 'sunny': 10, 'partlycloudy': 60, 'cloudy': 90,\n
        \   'windy': 40, 'windy-variant': 60, 'fog': 80, 'lightning': 70,\n    'lightning-rainy':
        80, 'rainy': 90, 'pouring': 95, 'snowy': 90,\n    'hail': 90, 'snowy-rainy':
        95\n  } %}\n  {{ map.get(w_state, 50) }}\n{% endif %}\n"
      threshold_on: '{{ -4.5 + (clouds|int / 100) * 2.5 }}'
      sumrak_ts: "{% if sunset_ts is not none and dusk_ts is not none and dusk_ts
        > sunset_ts %}\n  {% set frac = (threshold_on | abs) / 6.0 %}\n  {% set frac
        = 0 if frac < 0 else (1 if frac > 1 else frac) %}\n  {{ sunset_ts + frac *
        (dusk_ts - sunset_ts) }}\n{% elif sunset_ts is not none %}\n  {{ sunset_ts
        + 20*60 }}\n{% else %}\n  {{ as_timestamp(now()) + 20*60 }}\n{% endif %}\n"
      je_korizmeni_petak: '{{ is_state(''binary_sensor.korizmeni_petak'',''on'') }}'
      dodatak_min: '{{ 80 if je_korizmeni_petak else 40 }}'
      diff_min: '{{ ((sumrak_ts - misa_ts) / 60) | float }}'
      raw_cilj_ts: "{% if misa_jutarnja %}\n  {{ sumrak_ts }}\n{% elif diff_min |
        float >= (dodatak_min | int) %}\n  {{ sumrak_ts }}\n{% else %}\n  {{ misa_ts
        + (dodatak_min | int) * 60 }}\n{% endif %}\n"
      base_ts: '{{ ((raw_cilj_ts | int) // 60) * 60 }}'
      base_min: '{{ (base_ts | timestamp_custom(''%M'', true)) | int }}'
      cilj_ts: "{% set bt = base_ts | int %} {% if base_min in [56, 57] %}\n  {{ bt
        - 60 }}                          {# pomakni na minutu ranije, :00 #}\n{% elif
        base_min in [58, 59] %}\n  {{ (((bt // 3600) + 1) * 3600) + 30 }} {# vrh idućeg
        sata +30 s #}\n{% elif base_min == 0 %}\n  {{ bt + 30 }}                          {#
        puni sat +30 s #}\n{% elif base_min == 30 %}\n  {{ bt + 5 }}                           {#
        pola sata +5 s #}\n{% else %}\n  {{ bt }}                               {#
        ostale minute bez offseta #}\n{% endif %}\n"
  - action: input_datetime.set_datetime
    target:
      entity_id: input_datetime.zdravomarija_vecer_vrijeme
    data:
      time: '{{ cilj_ts | timestamp_custom(''%H:%M:%S'', true) }}'
  mode: single
- id: '1750093278085'
  alias: Dummy log zapis - svakih 2 sata
  description: Upisuje poruku u log svakih 2 sata radi watchdog nadzora
  triggers:
  - hours: /2
    trigger: time_pattern
  conditions: []
  actions:
  - data:
      message: 'Rato: HA je aktivan - {{ now() }}'
      level: info
    action: system_log.write
  mode: single
- id: '1750347849113'
  alias: HLAĐENJE CRKVE - RUČNO
  description: Pokreće hlađenje samo na onim klimama za koje je uključeno odgovarajuće
    input_boolean stanje
  triggers:
  - entity_id: input_boolean.rucno_hladenje
    to: 'on'
    trigger: state
  actions:
  - data:
      message: Automatizacija RUČNOG hlađenja crkve se pokrenula u {{ now() }}
      level: info
    action: system_log.write
  - if:
    - condition: state
      entity_id: input_boolean.koristi_klimu_crkva_1
      state: 'on'
    then:
    - target:
        entity_id: climate.9424b8b8c89e
      data:
        hvac_mode: cool
      action: climate.set_hvac_mode
    - target:
        entity_id: climate.9424b8b8c89e
      data:
        temperature: '{{ states(''input_number.klima_temp_hladjenje_crkva'') | float
          }}'
      action: climate.set_temperature
  - if:
    - condition: state
      entity_id: input_boolean.koristi_klimu_crkva_2
      state: 'on'
    then:
    - target:
        entity_id: climate.9424b8b8c8a4
      data:
        hvac_mode: cool
      action: climate.set_hvac_mode
    - target:
        entity_id: climate.9424b8b8c8a4
      data:
        temperature: '{{ states(''input_number.klima_temp_hladjenje_crkva'') | float
          }}'
      action: climate.set_temperature
  - if:
    - condition: state
      entity_id: input_boolean.koristi_klimu_crkva_3
      state: 'on'
    then:
    - target:
        entity_id: climate.9424b8b8c92a
      data:
        hvac_mode: cool
      action: climate.set_hvac_mode
    - target:
        entity_id: climate.9424b8b8c92a
      data:
        temperature: '{{ states(''input_number.klima_temp_hladjenje_crkva'') | float
          }}'
      action: climate.set_temperature
  - if:
    - condition: state
      entity_id: input_boolean.koristi_klimu_crkva_4
      state: 'on'
    then:
    - target:
        entity_id: climate.9424b8b87ea5
      data:
        hvac_mode: cool
      action: climate.set_hvac_mode
    - target:
        entity_id: climate.9424b8b87ea5
      data:
        temperature: '{{ states(''input_number.klima_temp_hladjenje_crkva'') | float
          }}'
      action: climate.set_temperature
  - if:
    - condition: state
      entity_id: input_boolean.koristi_klimu_crkva_5
      state: 'on'
    then:
    - target:
        entity_id: climate.9424b8698184
      data:
        hvac_mode: cool
      action: climate.set_hvac_mode
    - target:
        entity_id: climate.9424b8698184
      data:
        temperature: '{{ states(''input_number.klima_temp_hladjenje_crkva'') | float
          }}'
      action: climate.set_temperature
  - if:
    - condition: state
      entity_id: input_boolean.koristi_klimu_sakristija
      state: 'on'
    then:
    - target:
        entity_id: climate.c039370a331f
      data:
        hvac_mode: cool
      action: climate.set_hvac_mode
    - target:
        entity_id: climate.c039370a331f
      data:
        temperature: '{{ states(''input_number.klima_temp_hladjenje_sakristija'')
          | float }}'
      action: climate.set_temperature
  - delay: 05:00:00
  - target:
      entity_id:
      - climate.9424b8b8c89e
      - climate.9424b8b8c8a4
      - climate.9424b8b8c92a
      - climate.9424b8b87ea5
      - climate.9424b8698184
      - climate.c039370a331f
    action: climate.turn_off
  - target:
      entity_id: input_boolean.rucno_hladenje
    action: input_boolean.turn_off
  mode: restart
- id: '1750447275419'
  alias: Reset slavljenja svake noći
  description: ''
  triggers:
  - at: 00:00:02
    trigger: time
  actions:
  - target:
      entity_id: input_boolean.slavljenje_aktivirano
    action: input_boolean.turn_off
  mode: single
- id: '1750449587936'
  alias: SLAVLJENJE - podne (21.-28. lipnja)
  description: ''
  triggers:
  - at: '12:04:00'
    trigger: time
  conditions:
  - condition: state
    entity_id: input_boolean.automatika_podne
    state: 'on'
  - condition: template
    value_template: '{{ now().month == 6 and now().day >= 21 and now().day <= 28 }}

      '
  actions:
  - target:
      entity_id: switch.sonoff_100132ebac_3
    action: switch.turn_on
  - delay: 00:01:00
  - target:
      entity_id: switch.sonoff_100132ebac_3
    action: switch.turn_off
  mode: single
- id: '1750450247129'
  alias: PODNE - svaki dan (osim kad je misa u 11:00 ili 11:30)
  description: ''
  triggers:
  - at: '12:00:30'
    trigger: time
  conditions:
  - condition: state
    entity_id: input_boolean.automatika_podne
    state: 'on'
  - condition: template
    value_template: "{% set danas = now().weekday() %} {% if danas == 6 %}\n  {{ states('input_select.vrijeme_nedjeljne_jutarnje_mise')
      not in ['11:00', '11:30'] }}\n{% else %}\n  {{ states('input_select.vrijeme_dnevne_mise')
      not in ['11:00', '11:30'] }}\n{% endif %}\n"
  actions:
  - target:
      entity_id: "{% if is_state('input_select.podne_zvono', 'MUŠKO') %}\n  switch.sonoff_100132ebac_1\n{%
        else %}\n  switch.sonoff_100132ebac_2\n{% endif %}\n"
    action: switch.turn_on
  - delay:
      minutes: '{{ states(''input_number.podne_duljina'') | int }}'
  - target:
      entity_id: "{% if is_state('input_select.podne_zvono', 'MUŠKO') %}\n  switch.sonoff_100132ebac_1\n{%
        else %}\n  switch.sonoff_100132ebac_2\n{% endif %}\n"
    action: switch.turn_off
  mode: single
- id: '1750628456123'
  alias: Zvona – nedjeljne mise (ujedinjeno)
  description: 'Jutro: 2h i 1h prije; Večer: 30 min prije'
  triggers:
  - id: ned_jutro_minus_2h
    trigger: template
    for: 00:00:05
    value_template: "{% if now().weekday() == 6 %}\n  {% set s = states('input_select.vrijeme_nedjeljne_jutarnje_mise')
      %}\n  {% if s and s != 'Nema mise' and ':' in s %}\n    {% set misa = strptime(s,'%H:%M')
      %}\n    {% set t = (now().replace(hour=misa.hour, minute=misa.minute, second=0,
      microsecond=0)\n               - timedelta(hours=2)).strftime('%H:%M') %}\n
      \   {{ now().strftime('%H:%M') == t }}\n  {% else %} false {% endif %}\n{% else
      %} false {% endif %}\n"
  - id: ned_jutro_minus_1h
    trigger: template
    for: 00:00:05
    value_template: "{% if now().weekday() == 6 %}\n  {% set s = states('input_select.vrijeme_nedjeljne_jutarnje_mise')
      %}\n  {% if s and s != 'Nema mise' and ':' in s %}\n    {% set misa = strptime(s,'%H:%M')
      %}\n    {% set t = (now().replace(hour=misa.hour, minute=misa.minute, second=0,
      microsecond=0)\n               - timedelta(hours=1)).strftime('%H:%M') %}\n
      \   {{ now().strftime('%H:%M') == t }}\n  {% else %} false {% endif %}\n{% else
      %} false {% endif %}\n"
  - id: ned_vecer_minus_30m
    trigger: template
    for: 00:00:05
    value_template: "{% if now().weekday() == 6 %}\n  {% set s = states('input_select.vrijeme_nedjeljne_vecernje_mise')
      %}\n  {% if s and s != 'Nema mise' and ':' in s %}\n    {% set misa = strptime(s,'%H:%M')
      %}\n    {% set t = (now().replace(hour=misa.hour, minute=misa.minute, second=0,
      microsecond=0)\n               - timedelta(minutes=30)).strftime('%H:%M') %}\n
      \   {{ now().strftime('%H:%M') == t }}\n  {% else %} false {% endif %}\n{% else
      %} false {% endif %}\n"
  conditions:
  - condition: state
    entity_id: input_boolean.auto_zvona_za_misu
    state: 'on'
  actions:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''ned_jutro_minus_1h'' }}'
      sequence:
      - delay: 00:00:30
      - action: switch.turn_on
        target:
          entity_id:
          - switch.sonoff_100132ebac_1
          - switch.sonoff_100132ebac_2
      - delay: 00:01:30
      - action: switch.turn_off
        target:
          entity_id: switch.sonoff_100132ebac_1
      - delay: 00:00:30
      - action: switch.turn_off
        target:
          entity_id: switch.sonoff_100132ebac_2
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.nedjeljna_misa_vec_zvonilo
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''ned_jutro_minus_2h'' }}'
      sequence:
      - delay: 00:00:30
      - action: switch.turn_on
        target:
          entity_id:
          - switch.sonoff_100132ebac_1
          - switch.sonoff_100132ebac_2
      - delay: 00:01:30
      - action: switch.turn_off
        target:
          entity_id: switch.sonoff_100132ebac_1
      - delay: 00:00:30
      - action: switch.turn_off
        target:
          entity_id: switch.sonoff_100132ebac_2
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''ned_vecer_minus_30m'' }}'
      sequence:
      - delay: 00:00:30
      - action: switch.turn_on
        target:
          entity_id:
          - switch.sonoff_100132ebac_1
          - switch.sonoff_100132ebac_2
      - delay: 00:01:30
      - action: switch.turn_off
        target:
          entity_id: switch.sonoff_100132ebac_1
      - delay: 00:00:30
      - action: switch.turn_off
        target:
          entity_id: switch.sonoff_100132ebac_2
  mode: single
- id: '1750628657373'
  alias: Reset nedjeljna_misa_vec_zvonilo
  description: ''
  triggers:
  - at: 02:00:00
    trigger: time
  conditions:
  - condition: template
    value_template: '{{ now().weekday() == 6 }}'
  actions:
  - target:
      entity_id: input_boolean.nedjeljna_misa_vec_zvonilo
    action: input_boolean.turn_off
  mode: single
- id: '1750631006476'
  alias: Resetiraj ručna zvonjenja u ponoć
  description: ''
  triggers:
  - at: 00:00:00
    trigger: time
  actions:
  - target:
      entity_id:
      - input_datetime.rucno_zvonjenje_termin_1
      - input_datetime.rucno_zvonjenje_termin_2
      - input_datetime.rucno_zvonjenje_termin_3
    data:
      date: '{{ danasnji_datum }}'
      time: 00:00:00
    action: input_datetime.set_datetime
  - target:
      entity_id: input_boolean.rucno_zvonjenje_aktivno
    action: input_boolean.turn_off
  variables:
    danasnji_datum: '{{ now().date() }}'
  mode: single
- id: '1751383398695'
  alias: Automatsko čišćenje baze (recorder.purge)
  description: Pokreće se utorkom u 03:30 i briše podatke starije od 7 dana te repakira
    bazu
  triggers:
  - at: 03:30:00
    trigger: time
  conditions:
  - condition: time
    weekday:
    - tue
  actions:
  - data:
      keep_days: 7
      repack: true
    action: recorder.purge
  mode: single
- id: '1751486934700'
  alias: Zvona - Zdravomarija ujutro
  description: ''
  triggers:
  - value_template: '{% set vrijeme = states(''input_datetime.vrijeme_zdravomarije_ujutro'')[:5]
      %} {{ now().strftime(''%H:%M'') == vrijeme }}

      '
    trigger: template
  conditions:
  - condition: state
    entity_id: input_boolean.automatika_zdravomarije_ujutro
    state: 'on'
  - condition: template
    value_template: "{% set vrijeme = states('input_datetime.vrijeme_zdravomarije_ujutro')
      %} {% if not vrijeme %}\n  false\n{% else %}\n  {% set h = vrijeme[0:2] | int
      %}\n  {% set m = vrijeme[3:5] | int %}\n  {{ h >= 4 and (h > 4 or m >= 30) and
      (h < 8 or (h == 8 and m == 0)) }}\n{% endif %}\n"
  actions:
  - variables:
      delay_seconds: "{% set m = states('input_datetime.vrijeme_zdravomarije_ujutro')[3:5]
        | int %} {% if m == 0 %}\n  30\n{% elif m == 30 %}\n  5\n{% else %}\n  0\n{%
        endif %}\n"
      zvono_entity: "{% set vrsta = states('input_select.vrsta_zvona_zdravomarija_ujutro')
        %} {% if vrsta == 'Muško' %}\n  switch.sonoff_100132ebac_1\n{% else %}\n  switch.sonoff_100132ebac_2\n{%
        endif %}\n"
      trajanje: '{% set trajanje_min = states(''input_number.zdravomarija_ujutro_duljina'')
        | float %} {% set vrsta = states(''input_select.vrsta_zvona_zdravomarija_ujutro'')
        %} {% set umanjenje = 0.5 if vrsta == ''Muško'' else 0.25 %} {% set stvarno
        = trajanje_min - umanjenje %} {% set min = stvarno | int %} {% set sek = ((stvarno
        - min) * 60) | round(0) | int %} {{ "%02d:%02d:%02d" | format(0, min, sek)
        }}

        '
  - delay:
      seconds: '{{ delay_seconds }}'
  - target:
      entity_id: '{{ zvono_entity }}'
    action: switch.turn_on
  - delay: '{{ trajanje }}'
  - target:
      entity_id: '{{ zvono_entity }}'
    action: switch.turn_off
  mode: single
- id: '1754921873078'
  alias: HLAĐENJE CRKVE - ujedinjeno prije mise
  description: Radni dan, nedjelja jutro ili nedjelja večer – ovisno o rasporedu
  triggers:
  - trigger: time_pattern
    minutes: /10
  conditions:
  - condition: template
    value_template: '{{ koristimo_klime and mjesec_ok and toplo_dovoljno }}'
  - condition: state
    entity_id: input_boolean.blokiraj_automatsko_hladenje
    state: 'off'
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ grana_radni_dan }}'
      - condition: state
        entity_id: input_boolean.dnevna_misa_vec_zvonilo
        state: 'off'
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ grana_nedjelja_vecer }}'
      - condition: state
        entity_id: input_boolean.dnevna_misa_vec_zvonilo
        state: 'off'
    - condition: template
      value_template: '{{ grana_nedjelja_jutro }}'
  actions:
  - action: system_log.write
    data:
      level: info
      message: '[HLAĐENJE CRKVE] Start {{ now() }} | Grana: {% if grana_radni_dan
        %}RADNI DAN{% elif grana_nedjelja_jutro %}NED JUTRO{% elif grana_nedjelja_vecer
        %}NED VEČER{% else %}(nema){% endif %}'
  - repeat:
      for_each: '{{ klime }}'
      sequence:
      - if:
        - condition: template
          value_template: '{{ is_state(repeat.item.enable, ''on'') }}'
        then:
        - action: climate.set_hvac_mode
          target:
            entity_id: '{{ repeat.item.climate }}'
          data:
            hvac_mode: cool
        - action: climate.set_temperature
          target:
            entity_id: '{{ repeat.item.climate }}'
          data:
            temperature: '{{ states(repeat.item.temp)|float }}'
  variables:
    mjesec_ok: '{{ now().month in [5,6,7,8,9,10] }}'
    koristimo_klime: '{{ is_state(''input_boolean.koristiti_klima_uredaje'',''on'')
      }}'
    prognoza_off: '{{ is_state(''input_boolean.koristiti_prognozu_vremena'',''off'')
      }}'
    prognoza: '{{ state_attr(''weather.forecast_home_2'', ''forecast'') }}'
    min_temp: '{{ states(''input_number.minimalna_temperatura_za_hladjenje'')|float
      }}'
    je_nedjelja: '{{ now().weekday() == 6 }}'
    je_radni_dan: '{{ now().weekday() in [0,1,2,3,4,5] }}'
    satnica_obicna: '{{ states(''input_number.klima_hladjenje_satnica'')|float }}'
    satnica_nedjelja_jutro: '{{ states(''input_number.klima_hladjenje_satnica_nedjeljom'')|float
      }}'
    vrsta_mise: '{{ states(''input_select.vrsta_dnevne_mise'') }}'
    vrdm: '{{ states(''input_select.vrijeme_dnevne_mise'') }}'
    vrned_jutro: '{{ states(''input_select.vrijeme_nedjeljne_jutarnje_mise'') }}'
    vrned_vecer: '{{ states(''input_select.vrijeme_nedjeljne_vecernje_mise'') }}'
    in_prozor_radni: "{% set vrijeme_str = vrdm %} {% set sati = satnica_obicna %}
      {% if not vrijeme_str or ':' not in vrijeme_str %}\n  false\n{% else %}\n  {%
      set misa = strptime(vrijeme_str, '%H:%M') %}\n  {% set misa_dt = now().replace(hour=misa.hour,
      minute=misa.minute, second=0, microsecond=0) %}\n  {% set start = (misa_dt -
      timedelta(hours=sati)).time() %}\n  {% set end = (misa_dt + timedelta(minutes=30)).time()
      %}\n  {{ start <= now().time() <= end }}\n{% endif %}\n"
    in_prozor_ned_jutro: "{% set vrijeme_str = vrned_jutro %} {% set sati = satnica_nedjelja_jutro
      %} {% if not vrijeme_str or vrijeme_str == 'Nema mise' or ':' not in vrijeme_str
      %}\n  false\n{% else %}\n  {% set misa = strptime(vrijeme_str, '%H:%M') %}\n
      \ {% set misa_dt = now().replace(hour=misa.hour, minute=misa.minute, second=0,
      microsecond=0) %}\n  {% set start = (misa_dt - timedelta(hours=sati)).time()
      %}\n  {% set end = (misa_dt + timedelta(minutes=30)).time() %}\n  {{ start <=
      now().time() <= end }}\n{% endif %}\n"
    in_prozor_ned_vecer: "{% set vrijeme_str = vrned_vecer %} {% set sati = satnica_obicna
      %} {% if not vrijeme_str or vrijeme_str == 'Nema mise' or ':' not in vrijeme_str
      %}\n  false\n{% else %}\n  {% set misa = strptime(vrijeme_str, '%H:%M') %}\n
      \ {% set misa_dt = now().replace(hour=misa.hour, minute=misa.minute, second=0,
      microsecond=0) %}\n  {% set start = (misa_dt - timedelta(hours=sati)).time()
      %}\n  {% set end = (misa_dt + timedelta(minutes=30)).time() %}\n  {{ start <=
      now().time() <= end }}\n{% endif %}\n"
    toplo_dovoljno: "{% if prognoza_off %}\n  true\n{% else %}\n  {% if prognoza is
      defined and prognoza and prognoza[0].temperature is defined %}\n    {{ prognoza[0].temperature|float
      >= min_temp }}\n  {% else %}\n    true\n  {% endif %}\n{% endif %}\n"
    grana_radni_dan: "{{ je_radni_dan\n   and vrsta_mise in ['Obična dnevna misa','Blagdan','Svetkovina']\n
      \  and (in_prozor_radni | bool) }}\n"
    grana_nedjelja_jutro: '{{ je_nedjelja and (in_prozor_ned_jutro | bool) }}

      '
    grana_nedjelja_vecer: '{{ je_nedjelja and (in_prozor_ned_vecer | bool) }}

      '
    klime: "{{ [\n  {'enable':'input_boolean.koristi_klimu_crkva_1','climate':'climate.9424b8b8c89e','temp':'input_number.klima_temp_hladjenje_crkva'},\n
      \ {'enable':'input_boolean.koristi_klimu_crkva_2','climate':'climate.9424b8b8c8a4','temp':'input_number.klima_temp_hladjenje_crkva'},\n
      \ {'enable':'input_boolean.koristi_klimu_crkva_3','climate':'climate.9424b8b8c92a','temp':'input_number.klima_temp_hladjenje_crkva'},\n
      \ {'enable':'input_boolean.koristi_klimu_crkva_4','climate':'climate.9424b8b87ea5','temp':'input_number.klima_temp_hladjenje_crkva'},\n
      \ {'enable':'input_boolean.koristi_klimu_crkva_5','climate':'climate.9424b8698184','temp':'input_number.klima_temp_hladjenje_crkva'},\n
      \ {'enable':'input_boolean.koristi_klimu_sakristija','climate':'climate.c039370a331f','temp':'input_number.klima_temp_hladjenje_sakristija'}\n]
      }}\n"
  mode: single
- id: '1755202598437'
  alias: Kazaljke – catch-up nakon restarta
  description: Na startu odmah zaustavi minutnu automatiku, odradi catch-up, pa vrati.
  triggers:
  - event: start
    trigger: homeassistant
  conditions: []
  actions:
  - action: input_boolean.turn_on
    target:
      entity_id: input_boolean.kazaljke_stop
  - action: script.turn_on
    target:
      entity_id: script.kazaljke_automatsko_dovodenje_catch_up
  mode: single
- id: '1755202773972'
  alias: Toranjski sat – pomak svake minute (:00)
  description: Parne minute POZ, neparne NEG; zapisuje samo zadnji pomak i brojač.
  triggers:
  - seconds: '00'
    trigger: time_pattern
  conditions:
  - condition: state
    entity_id: input_boolean.kazaljke_stop
    state: 'off'
  - condition: state
    entity_id: switch.kazaljke_pozitivna
    state: 'off'
  - condition: state
    entity_id: switch.kazaljke_negativna
    state: 'off'
  actions:
  - variables:
      even: '{{ (now().minute | int) % 2 == 0 }}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ even }}'
      sequence:
      - action: script.turn_on
        target:
          entity_id: script.kazaljke_impuls_poz_6_s
        data: {}
    - conditions: []
      sequence:
      - action: script.turn_on
        target:
          entity_id: script.kazaljke_impuls_neg_6_s
        data: {}
  - action: input_datetime.set_datetime
    target:
      entity_id: input_datetime.kazaljke_zadnji_pomak
    data:
      date: '{{ now().strftime(''%Y-%m-%d'') }}'
      time: '{{ now().replace(second=0, microsecond=0).strftime(''%H:%M:%S'') }}'
  - action: counter.increment
    target:
      entity_id: counter.kazaljke_broj_pomaka
    data: {}
  mode: single
- id: '1755204183504'
  alias: Kazaljke – DST korekcija (provjera svake minute)
  description: Detektira promjenu UTC offseta (60↔120). U ožujku doda +60 impulsa,
    u listopadu pauzira 60 min.
  triggers:
  - minutes: /1
    seconds: '05'
    trigger: time_pattern
  conditions: []
  actions:
  - variables:
      cur_off_min: '{{ ((as_timestamp(now()) - as_timestamp(utcnow())) / 60) | round(0)
        | int }}'
      prev_off_min: '{{ states(''input_number.kazaljke_tz_offset_min'') | int(cur_off_min)
        }}'
      now_floor: '{{ now().replace(second=0, microsecond=0) }}'
  - choose:
    - conditions: '{{ prev_off_min in [60,120] and cur_off_min in [60,120] and cur_off_min
        != prev_off_min }}'
      sequence:
      - choose:
        - conditions: '{{ prev_off_min == 60 and cur_off_min == 120 }}'
          sequence:
          - action: input_boolean.turn_on
            target:
              entity_id: input_boolean.kazaljke_stop
          - variables:
              one_hour_ago: '{{ now_floor - timedelta(hours=1) }}'
          - action: input_datetime.set_datetime
            target:
              entity_id: input_datetime.kazaljke_zadnji_pomak
            data:
              date: '{{ as_datetime(one_hour_ago).strftime(''%Y-%m-%d'') }}'
              time: '{{ as_datetime(one_hour_ago).strftime(''%H:%M:%S'') }}'
          - action: input_number.set_value
            target:
              entity_id: input_number.kazaljke_tz_offset_min
            data:
              value: '{{ cur_off_min }}'
          - action: persistent_notification.create
            data:
              title: DST (ožujak)
              message: 'Promjena 60→120: pokrećem +60 impulsa (catch-up).'
          - action: script.turn_on
            target:
              entity_id: script.kazaljke_automatsko_dovodenje_catch_up
        - conditions: '{{ prev_off_min == 120 and cur_off_min == 60 }}'
          sequence:
          - action: input_boolean.turn_on
            target:
              entity_id:
              - input_boolean.kazaljke_stop
              - input_boolean.kazaljke_dst_hold
          - action: input_number.set_value
            target:
              entity_id: input_number.kazaljke_tz_offset_min
            data:
              value: '{{ cur_off_min }}'
          - action: persistent_notification.create
            data:
              title: DST (listopad)
              message: 'Promjena 120→60: pauza 60 min bez impulsa.'
          - delay: 01:00:10
          - action: input_datetime.set_datetime
            target:
              entity_id: input_datetime.kazaljke_zadnji_pomak
            data:
              date: '{{ now().strftime(''%Y-%m-%d'') }}'
              time: '{{ now().replace(second=0, microsecond=0).strftime(''%H:%M:%S'')
                }}'
          - action: input_boolean.turn_off
            target:
              entity_id:
              - input_boolean.kazaljke_dst_hold
              - input_boolean.kazaljke_stop
    default:
    - action: input_number.set_value
      target:
        entity_id: input_number.kazaljke_tz_offset_min
      data:
        value: '{{ cur_off_min }}'
  mode: single
- id: '1755264219855'
  alias: Otkucavanje – puni i pola sata
  triggers:
  - minutes: '0'
    seconds: '0'
    id: full
    trigger: time_pattern
  - minutes: '30'
    seconds: '0'
    id: half
    trigger: time_pattern
  conditions:
  - condition: state
    entity_id: binary_sensor.otkucavanje_dopusteno_sada
    state: 'on'
  actions:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''full'' }}'
      sequence:
      - action: script.otkucavanje_puni_sat_muski
        data:
          count: "{{ 12 if (now().hour % 12) == 0 else (now().hour % 12) }}"
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''half'' }}'
      sequence:
      - action: script.otkucavanje_pola_sata_zenski_1
  mode: single
- id: '1755264429080'
  alias: Vazmeno trodnevlje – upravljaj chime_enable (jednostavno)
  triggers:
  - minutes: /1
    trigger: time_pattern
  actions:
  - choose:
    - conditions:
      - condition: template
        value_template: "{% set easter = as_datetime(state_attr('calendar.uskrs','start_time'))
          %} {% if not easter %} false {% else %} {% set holy_thu = (easter - timedelta(days=3)).date()
          %} {% set today = now().date() %} {% set misa_str = states('input_select.vrijeme_dnevne_mise')
          %} {% if misa_str == 'Nema mise' %}\n  {% set misa = now().replace(hour=18,
          minute=0, second=0, microsecond=0) %}\n{% else %}\n  {% set hh = misa_str.split(':')[0]
          | int(0) %}\n  {% set mm = misa_str.split(':')[1] | int(0) %}\n  {% set
          misa = now().replace(hour=hh, minute=mm, second=0, microsecond=0) %}\n{%
          endif %} {{ today == holy_thu and now() >= misa and\n   is_state('input_boolean.chime_enable','on')
          }}\n{% endif %}"
      sequence:
      - target:
          entity_id: input_boolean.chime_enable
        action: input_boolean.turn_off
    - conditions:
      - condition: template
        value_template: "{% set easter = as_datetime(state_attr('calendar.uskrs','start_time'))
          %} {% if not easter %} false {% else %} {% set target = easter.replace(hour=6,
          minute=0, second=0, microsecond=0) %} {{ now() >= target and now().date()
          == easter.date() and\n   is_state('input_boolean.chime_enable','off') }}\n{%
          endif %}"
      sequence:
      - target:
          entity_id: input_boolean.chime_enable
        action: input_boolean.turn_on
  mode: single
